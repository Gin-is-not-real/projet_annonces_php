TODO:
    - consulter la liste des annonces par catégories
    - fiche détaillée de chaque annonce
OK    - s'inscrire pour ajouter des annonces      
OK    - pouvoir modifier ses annonces
    - supprimer ses annonces
    - lister les 10 premières annonces du site et les suivantes 10 par 10
    - afficher une image par défaut (offer), ne doit être pas bloquant

    annonces
OK        Titre (exemple : nom d'un objet)
        Possibilité d'ajouter une photo
OK        Description
        Catégorie
OK        Prix
OK        Date de publication
OK        Lieu
    
    utilisateurs
OK        Nom d'utilisateur
OK        Adress e-mail
OK        Mot de passe

PAPIER    - Créer un MCD 
    - maquette

BONUS:
    - cron qui supprime les annonces qui sont publiées à n+30 jours de la date de création, 
    - Envoyer un mail à la personne de la suppression de son annonce
    - infinite-scroll pour la pagination des annonces
    -  annonces en favoris
    - annonce: show: lien permettant de la télécharger au format pdf
    - système pour communiquer avec le vendeur

    
////////////////////////////////////////////
//
les Managers se connectent, recuperent et ajoutent les données dans la base
les Controllers envoient des données dans la base et renvoi le template

///////////////////////////////////////////
DatabaseManager
    - ses props sont les infos de connections
    - instancié avec les infos de co
    - initialise le pdo 

    - se connecte a la base

    - find
    - findAll

UserManager extends DatabaseManager
    - instancié avec $tablename
    
    - add($user)    require user 
    - update($id)   

*idem pour OfferManager
////////////////////////////////////////////
//

- j'ai fait les entités:
    - User:
        private $id;            int
        private $username;      str
        private $email;
        private $password;
        private $role;
     
    - Offer:
        private $id;
        private $title;
        private $content;
        private $price;
        private $place;

        private $publicationDate;
        private $category;
        private $image;

- j'ai cree les tables users et offers

    *crud user 

////////////////////////////////////////////
    //tester les requetes de jointures 
    public function testJoin() {
        try {
            $result = $this->pdo->prepare("
                SELECT * FROM offers AS of
                INNER JOIN users AS us 
                ON us.id = of.user_id
                UNION 
                SELECT * FROM images AS im
                INNER JOIN offers AS of 
                ON im.offer_id = of.id 
                WHERE user_id = 819122120 
            ");

            $data = $result->fetchAll();
            var_dump($result, $data);

        } catch (Exception $e) {
            die('Error on add: ' . $e->getMessage());
        } 
    }


    OK:
                    $result = $this->pdo->query("
                SELECT id
                FROM users 
                INNER JOIN offers 
                ON users.id = offers.user_id
                UNION ALL
                SELECT id 
                FROM images 
                INNER JOIN offers
                ON images.offer_id = offers.id
                ");

////////////////////////////////////////////
//UPLOAD IMAGES 

    - j'ai cree une table image 
        id, filename, offer_id

    - a partir de la table images j'ai cree la jointure:
        offer_id / projet_offers / offers / id

////////////////////////////////////////////
//NEW STRUCTURE RELATIONS 

    - les controller instancie les managers 
    - les controller ont une prop ENTITY = nom de l'entitée liée
    - les Entity ont une prop TABLE_NAME et une prop PRIMARY_KEY, qui seront utilisée par le Manager


//TODO: 

